#!/usr/bin/env python

import logging

# Gets rid of matplot logging DEBUG messages
plt_logger = logging.getLogger('matplotlib')
plt_logger.setLevel(logging.WARNING)

from ROOT import TCanvas, TPad, TFile, TPaveLabel, TPaveText, TTreeReader, TTreeReaderValue
from ROOT import gROOT
from rootpy.interactive import wait
import collections
import matplotlib.pyplot as plt
import numpy as np
import sys

# f = TFile.Open("TDISpion.root","read")
f = TFile.Open("TDISpion_80k.root","read")
if not f or f.IsZombie() :
	exit
f.ls()

#
events = f.Evnts
xpi = np.array([])
ypi = np.array([])
tpi = np.array([])
f2N = np.array([])
p2_pt = np.array([])
p2_z = np.array([])
sigma_dis = np.array([])
sigma_tdis = np.array([])
pex_Lab = np.array([])
pey_Lab = np.array([])
pez_Lab = np.array([])
EeE_Lab = np.array([])
ppix_Lab = np.array([])
ppiy_Lab = np.array([])
ppiz_Lab = np.array([])
EpiE_Lab = np.array([])
pprx_Lab = np.array([])
ppry_Lab = np.array([])
pprz_Lab = np.array([])
EprE_Lab = np.array([])
pXx_Lab = np.array([])
pXy_Lab = np.array([])
pXz_Lab = np.array([])
EXE_Lab = np.array([])
TDIS_xbj = np.array([])
TDIS_znq = np.array([])
TDIS_Mx2 = np.array([])
TDIS_y = np.array([])
EScatRest = np.array([])
kScatRest = np.array([])
PhiScatRest = np.array([])
csPhiRest = np.array([])
csTheRest = np.array([])

def progressBar(value, endvalue, bar_length=70):

        percent = float(value) / endvalue
        arrow = '=' * int(round(percent * bar_length)-1) + '>'
        spaces = ' ' * (bar_length - len(arrow))

        sys.stdout.write(" [{0}]\r {1}%".format(arrow + spaces, int(round(percent * 100))))
        sys.stdout.flush()
        
i=0
# print(getattr(events,'ypi'))
for e in events:
    progressBar(i,events.GetEntries())
    xpi = np.append(xpi,getattr(e,'xpi'))
    ypi = np.append(ypi,getattr(e,'ypi'))
    tpi = np.append(tpi,getattr(e,'tpi'))
    f2N = np.append(f2N,getattr(e,'f2N'))
    p2_pt = np.append(p2_pt,getattr(e,'p2_pt'))
    p2_z = np.append(p2_z,getattr(e,'p2_z'))
    sigma_dis = np.append(sigma_dis,getattr(e,'sigma_dis'))
    sigma_tdis = np.append(sigma_tdis,getattr(e,'sigma_tdis'))
    pex_Lab = np.append(pex_Lab,getattr(e,'pex_Lab'))
    pey_Lab = np.append(pey_Lab,getattr(e,'pey_Lab'))
    pez_Lab = np.append(pez_Lab,getattr(e,'pez_Lab'))
    EeE_Lab = np.append(EeE_Lab,getattr(e,'EeE_Lab'))
    ppix_Lab = np.append(ppix_Lab,getattr(e,'ppix_Lab'))
    ppiy_Lab = np.append(ppiy_Lab,getattr(e,'ppiy_Lab'))
    ppiz_Lab = np.append(ppiz_Lab,getattr(e,'ppiz_Lab'))
    EpiE_Lab = np.append(EpiE_Lab,getattr(e,'EpiE_Lab'))
    pprx_Lab = np.append(pprx_Lab,getattr(e,'pprx_Lab'))
    ppry_Lab = np.append(ppry_Lab,getattr(e,'ppry_Lab'))
    pprz_Lab = np.append(pprz_Lab,getattr(e,'pprz_Lab'))
    EprE_Lab = np.append(EprE_Lab,getattr(e,'EprE_Lab'))
    pXx_Lab = np.append(pXx_Lab,getattr(e,'pXx_Lab'))
    pXy_Lab = np.append(pXy_Lab,getattr(e,'pXy_Lab'))
    pXz_Lab = np.append(pXz_Lab,getattr(e,'pXz_Lab'))
    EXE_Lab = np.append(EXE_Lab,getattr(e,'EXE_Lab'))
    TDIS_xbj = np.append(TDIS_xbj,getattr(e,'TDIS_xbj'))
    TDIS_znq = np.append(TDIS_znq,getattr(e,'TDIS_znq'))
    TDIS_Mx2 = np.append(TDIS_Mx2,getattr(e,'TDIS_Mx2'))
    TDIS_y = np.append(TDIS_y,getattr(e,'TDIS_y'))
    EScatRest = np.append(EScatRest,getattr(e,'EScatRest'))
    kScatRest = np.append(kScatRest,getattr(e,'kScatRest'))
    PhiScatRest = np.append(PhiScatRest,getattr(e,'PhiScatRest'))
    csPhiRest = np.append(csPhiRest,getattr(e,'csPhiRest'))
    csTheRest = np.append(csTheRest,getattr(e,'csTheRest'))
    # print(getattr(e,'ypi'))
    # print("\r%i" % i)
    i+=1
    
    
print("ypi:%s" % str(ypi))
print("xpi:%s" % str(xpi))
print("tpi:%s" % str(tpi))
print("f2N:%s" % str(f2N))
print("p2_pt:%s" % str(p2_pt))
print("p2_z:%s" % str(p2_z))
print("sigma_dis:%s" % str(sigma_dis))
print("sigma_tdis:%s" % str(sigma_tdis))
print("pex_Lab:%s" % str(pex_Lab))
print("pey_Lab:%s" % str(pey_Lab))
print("pez_Lab:%s" % str(pez_Lab))
print("EeE_Lab:%s" % str(EeE_Lab))
print("ppix_Lab:%s" % str(ppix_Lab))
print("ppiy_Lab:%s" % str(ppiy_Lab))
print("ppiz_Lab:%s" % str(ppiz_Lab))
print("EpiE_Lab:%s" % str(EpiE_Lab))
print("pprx_Lab:%s" % str(pprx_Lab))
print("ppry_Lab:%s" % str(ppry_Lab))
print("pprz_Lab:%s" % str(pprz_Lab))
print("EprE_Lab:%s" % str(EprE_Lab))
print("pXx_Lab:%s" % str(pXx_Lab))
print("pXy_Lab:%s" % str(pXy_Lab))
print("pXz_Lab:%s" % str(pXz_Lab))
print("EXE_Lab:%s" % str(EXE_Lab))
print("TDIS_xbj:%s" % str(TDIS_xbj))
print("TDIS_znq:%s" % str(TDIS_znq))
print("TDIS_Mx2:%s" % str(TDIS_Mx2))
print("TDIS_y:%s" % str(TDIS_y))
print("EScatRest:%s" % str(EScatRest))
print("kScatRest:%s" % str(kScatRest))
print("PhiScatRest:%s" % str(PhiScatRest))
print("csPhiRest:%s" % str(csPhiRest))
print("csTheRest:%s" % str(csTheRest))

# print(collecions.Counter(ypi))
binwidth = 0.01

sigma_dis_100 = sorted(i <= 100 for i in sigma_dis)
print("==============================================")
print("sigma_dis_100:%s" % str(sigma_dis_100))
print("sigma_dis:%s" % str(sigma_dis))

if (sigma_dis_100):
    plt.hist(xpi,bins=np.arange(min(xpi), max(xpi) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    plt.title('xpi', fontsize =16)
    # plt.show()
    plt.clf()
    plt.hist(ypi,bins=np.arange(min(ypi), max(ypi) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    plt.title('ypi', fontsize =16)
    # plt.show()
    plt.clf()
    plt.hist(tpi,bins=np.arange(min(tpi), max(tpi) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    plt.title('tpi', fontsize =16)
    # plt.show()
    plt.clf()
    plt.hist(f2N,bins=np.arange(min(f2N), max(f2N) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    plt.title('f2N', fontsize =16)
    # plt.show()
    plt.clf()
    plt.hist(p2_pt,bins=np.arange(min(p2_pt), max(p2_pt) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    plt.title('p2_pt', fontsize =16)
    # plt.show()
    plt.clf()
    plt.hist(p2_z,bins=np.arange(min(p2_z), max(p2_z) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    plt.title('p2_z', fontsize =16)
    # plt.show()
    plt.clf()
    plt.hist(sigma_dis,bins=np.arange(min(sigma_dis), max(sigma_dis) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    plt.title('sigma_dis', fontsize =16)
    # plt.show()
    plt.clf()
    plt.hist(sigma_tdis,bins=np.arange(min(sigma_tdis), max(sigma_tdis) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    plt.title('sigma_tdis', fontsize =16)
    # plt.show()
    plt.clf()
    # plt.hist(pex_Lab,bins=np.arange(min(pex_Lab), max(pex_Lab) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    # plt.title('pex_Lab', fontsize =16)
    # # plt.show()
    # plt.clf()
    # plt.hist(pey_Lab,bins=np.arange(min(pey_Lab), max(pey_Lab) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    # plt.title('pey_Lab', fontsize =16)
    # # plt.show()
    # plt.clf()
    # plt.hist(pez_Lab,bins=np.arange(min(pez_Lab), max(pez_Lab) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    # plt.title('pez_Lab', fontsize =16)
    # # plt.show()
    # plt.clf()
    # plt.hist(EeE_Lab,bins=np.arange(min(EeE_Lab), max(EeE_Lab) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    # plt.title('EeE_Lab', fontsize =16)
    # # plt.show()
    # plt.clf()
    # plt.hist(ppix_Lab,bins=np.arange(min(ppix_Lab), max(ppix_Lab) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    # plt.title('ppix_Lab', fontsize =16)
    # # plt.show()
    # plt.clf()
    # plt.hist(ppiy_Lab,bins=np.arange(min(ppiy_Lab), max(ppiy_Lab) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    # plt.title('ppiy_Lab', fontsize =16)
    # # plt.show()
    # plt.clf()
    # plt.hist(ppiz_Lab,bins=np.arange(min(ppiz_Lab), max(ppiz_Lab) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    # plt.title('ppiz_Lab', fontsize =16)
    # # plt.show()
    # plt.clf()
    # plt.hist(EpiE_Lab,bins=np.arange(min(EpiE_Lab), max(EpiE_Lab) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    # plt.title('EpiE_Lab', fontsize =16)
    # # plt.show()
    # plt.clf()
    # plt.hist(pprx_Lab,bins=np.arange(min(pprx_Lab), max(pprx_Lab) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    # plt.title('pprx_Lab', fontsize =16)
    # # plt.show()
    # plt.clf()
    # plt.hist(ppry_Lab,bins=np.arange(min(ppry_Lab), max(ppry_Lab) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    # plt.title('ppry_Lab', fontsize =16)
    # # plt.show()
    # plt.clf()
    # plt.hist(pprz_Lab,bins=np.arange(min(pprz_Lab), max(pprz_Lab) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    # plt.title('pprz_Lab', fontsize =16)
    # # plt.show()
    # plt.clf()
    # plt.hist(EprE_Lab,bins=np.arange(min(EprE_Lab), max(EprE_Lab) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    # plt.title('EprE_Lab', fontsize =16)
    # # plt.show()
    # plt.clf()
    # plt.hist(pXx_Lab,bins=np.arange(min(pXx_Lab), max(pXx_Lab) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    # plt.title('pXx_Lab', fontsize =16)
    # # plt.show()
    # plt.clf()
    # plt.hist(pXy_Lab,bins=np.arange(min(pXy_Lab), max(pXy_Lab) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    # plt.title('pXy_Lab', fontsize =16)
    # # plt.show()
    # plt.clf()
    # plt.hist(pXz_Lab,bins=np.arange(min(pXz_Lab), max(pXz_Lab) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    # plt.title('pXz_Lab', fontsize =16)
    # # plt.show()
    # plt.clf()
    # plt.hist(EXE_Lab,bins=np.arange(min(EXE_Lab), max(EXE_Lab) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    # plt.title('EXE_Lab', fontsize =16)
    # # plt.show()
    # plt.clf()
    plt.hist(TDIS_xbj,bins=np.arange(min(TDIS_xbj), max(TDIS_xbj) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    plt.title('TDIS_xbj', fontsize =16)
    # plt.show()
    plt.clf()
    # plt.hist(TDIS_znq,bins=np.arange(min(TDIS_znq), max(TDIS_znq) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    # plt.title('TDIS_znq', fontsize =16)
    # # plt.show()
    # plt.clf()
    # plt.hist(TDIS_Mx2,bins=np.arange(min(TDIS_Mx2), max(TDIS_Mx2) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    # plt.title('TDIS_Mx2', fontsize =16)
    # # plt.show()
    # plt.clf()
    plt.hist(TDIS_y,bins=np.arange(min(TDIS_y), max(TDIS_y) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    plt.title('TDIS_y', fontsize =16)
    # plt.show()
    plt.clf()
    # plt.hist(EScatRest,bins=np.arange(min(EScatRest), max(EScatRest) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    # plt.title('EScatRest', fontsize =16)
    # plt.show()
    # plt.clf()
    # plt.hist(kScatRest,bins=np.arange(min(kScatRest), max(kScatRest) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    # plt.title('kScatRest', fontsize =16)
    # plt.show()
    # plt.clf()
    # plt.hist(PhiScatRest,bins=np.arange(min(PhiScatRest), max(PhiScatRest) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    # plt.title('PhiScatRest', fontsize =16)
    # plt.show()
    # plt.clf()
    # plt.hist(csPhiRest,bins=np.arange(min(csPhiRest), max(csPhiRest) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    # plt.title('csPhiRest', fontsize =16)
    # plt.show()
    # plt.clf()
    # plt.hist(csTheRest,bins=np.arange(min(csTheRest), max(csTheRest) + binwidth, binwidth),histtype='step', stacked=True, fill=False )
    # plt.title('csTheRest', fontsize =16)
    # plt.clf()
    # plt.show()
    
    # plt.hist2d(TDIS_xbj,sigma_dis,bins=np.arange(min(TDIS_xbj), max(TDIS_xbj) + binwidth, binwidth),norm=colors.LogNorm())
    # plt.title('#sigma_{dis} vs TDIS_xbj', fontsize =16)
    # plt.show()
    # plt.clf()
    
    plt.scatter(TDIS_xbj,sigma_dis)
    plt.title('$\sigma_{DIS}$ vs TDIS_xbj', fontsize =16)
    plt.xscale('log')
    plt.yscale('log')
    plt.show()
    plt.clf()
