 ve/del *
 close 0
 
 len=6
 
 ve/cre q2([len]) r 3.75 12 30 60 120 240
 ve/cre err([len]) r
 
* Factor to weight event yield by:
* 1) Luminosity 
* 2) Bin sizes 
 
 trials=35000
 lumi=8.6E+10
 xbinz=0.1
 q2binz=5
 
 scale=$rsigma([lumi]*[xbinz]*[q2binz]/[trials])
 
 mess Scale factor is: [scale]
 
* normfac=1E-06 | unclear what this one does
 
*  5 ON 50 KINEMATICS
*  Unweighted number of counts per bin
 ve/cre n1([len]) r 12735 7172 3185 989 0 0
 ve/cre n2([len]) r 3254 2187 2835 2204 956 1
 ve/cre n3([len]) r 1973 1962 1831 1618 1205 348
 ve/cre n4([len]) r 1434 1445 1317 1178 1026 655
 ve/cre n5([len]) r 1143 1128 1068 985 877 627
 ve/cre n6([len]) r 955 872 865 832 735 595
 ve/cre n7([len]) r 790 787 746 733 678 576
 ve/cre n8([len]) r 671 640 673 642 567 457
 
* Weighted number of counts per bin, the yield: weight = sigTDIS/Ntrial
 ve/cre c1([len]) r 5574 3681 2063 807 0 0
 ve/cre c2([len]) r 1941 2084 2835 1685 862 1
 ve/cre c3([len]) r 957 1185 1264 1218 1020 313
 ve/cre c4([len]) r 545 760 835 847 823 565
 ve/cre c5([len]) r 315 540 642 664 699 540
 ve/cre c6([len]) r 256 344 458 534 555 493
 ve/cre c7([len]) r 184 300 386 437 473 461
 ve/cre c8([len]) r 139 194 295 399 383 363
 
* Mean value of F2K per bin (unweighted - shifts a little when weighted)
 ve/cre f2k1([len]) r 3.64E-06 3.63E-06 4.61E-06 1.27E-05 0 0
 ve/cre f2k2([len]) r 7.28E-06 7.74E-06 6.63E-06 4.90E-06 7.70E-06 2.43E-08
 ve/cre f2k3([len]) r 5.26E-06 4.26E-06 1.27E-06 -2.57E-07 -4.18E-07 4.17E-06
 ve/cre f2k4([len]) r 5.33E-05 1.22E-06 -0.00017 -0.00048 -0.00060 0.00055
 ve/cre f2k5([len]) r -1.46E-05 -8.78E-06 -0.00024 -0.00021 -0.00059 5.35E-05
 ve/cre f2k6([len]) r 3.71E-05 5.97E-05 -8.40E-05 -0.00022 -0.00074 0.00031
 ve/cre f2k7([len]) r 3.38E-05 4.36E-05 -0.00018 -0.00029 -0.00068 -0.00081 
 ve/cre f2k8([len]) r 5.64E-05 3.54E-05 -9.996E-06 -0.00017 -0.00090 -0.00012 
 
*  5 ON 100 KINEMATICS
*  Unweighted number of counts per bin
 ve/cre n11([len]) r 16187 10373 6084 3188 989 0
 ve/cre n21([len]) r 3504 3289 3125 2898 2204 921 
 ve/cre n31([len]) r 1993 1990 1958 1761 1618 1226
 ve/cre n41([len]) r 1463 1396 1442 1365 1178 1090
 ve/cre n51([len]) r 1065 1125 1064 1055 985 849
 ve/cre n61([len]) r 986 938 900 866 832 775
 ve/cre n71([len]) r 755 781 706 736 733 639
 ve/cre n81([len]) r 638 632 648 609 642 587
 
* Weighted number of counts per bin, the yield: weight = sigTDIS/Ntrial
 ve/cre c11([len]) r 6769 4799 3242 2022 806 0
 ve/cre c21([len]) r 1837 21032087 1979 1682 811
 ve/cre c31([len]) r 809 1122 1316 1229 1238 1061
 ve/cre c41([len]) r 487 640 845 895 856 871
 ve/cre c51([len]) r 287 442 554 661 675 672
 ve/cre c61([len]) r 233 349 445 498 558 600
 ve/cre c71([len]) r 146 229 229 374 465 455 
 ve/cre c81([len]) r 99 168 227 303 420 417
 
* Mean value of F2K per bin (unweighted - shifts a little when weighted)
 ve/cre f2k11([len]) r 1.02E-06 1.77E-07 -5.70E-07 -1.77E-06 -1.33E-06 0
 ve/cre f2k21([len]) r 4.56E-06 4.43E-06 3.34E-06 8.62E-07 1.11E-07 7.40E-06
 ve/cre f2k31([len]) r 
 ve/cre f2k41([len]) r 
 ve/cre f2k51([len]) r 
 ve/cre f2k61([len]) r 
 ve/cre f2k71([len]) r 
 ve/cre f2k81([len]) r 
 
 sigma c1 = c1*[scale]
 sigma c2 = c2*[scale]
 sigma c3 = c3*[scale]
 sigma c4 = c4*[scale]
 sigma c5 = c5*[scale]
 sigma c6 = c6*[scale]
 sigma c7 = c7*[scale] 
 sigma c8 = c8*[scale]    
 
 sigma f2k1 = abs(f2k1)
 sigma f2k2 = abs(f2k2)
 sigma f2k3 = abs(f2k3)
 sigma f2k4 = abs(f2k4)
 sigma f2k5 = abs(f2k5)
 sigma f2k6 = abs(f2k6) 
 sigma f2k7 = abs(f2k7)  
 sigma f2k8 = abs(f2k8)   
 
* Counts/mC = ci +- 1/sqrt(ni)
 sigma df2k1 = sqrt(1/c1)*f2k1
 sigma df2k2 = sqrt(1/c2)*f2k2
 sigma df2k3 = sqrt(1/c3)*f2k3
 sigma df2k4 = sqrt(1/c4)*f2k4
 sigma df2k5 = sqrt(1/c5)*f2k5
 sigma df2k6 = sqrt(1/c6)*f2k6
 sigma df2k7 = sqrt(1/c7)*f2k7
 sigma df2k8 = sqrt(1/c8)*f2k8 
 
* stat error on simulation: yield*sqrt(1/n)  
* sigma df2k1 = c1*sqrt(1/n1)*f2k1
* sigma df2k2 = c2*sqrt(1/n2)*f2k2
* sigma df2k3 = c3*sqrt(1/n3)*f2k3
* sigma df2k4 = c4*sqrt(1/n4)*f2k4
* sigma df2k5 = c5*sqrt(1/n5)*f2k5
* sigma df2k6 = c6*sqrt(1/n6)*f2k6
* sigma df2k7 = c7*sqrt(1/n7)*f2k7
* sigma df2k8 = c8*sqrt(1/n8)*f2k8

 
 opt logx
 opt logy

* null 2 500 -0.03 0.03
 null 2 500 1E-08 1E-02
 
 set pmci 1
 hpl/err q2 f2k1 err df2k1 [len] 21 0.2 s 
 key 3 8E-07 21 ''
 itx 3.5 7E-07 'x=(0.1,0.2)'
 set pmci 2 
 hpl/err q2 f2k2 err df2k2 [len] 20 0.2 s  
 key 3 4E-07 20 ''
 itx 3.5 3.5E-07 'x=(0.2,0.3)' 
 set pmci 3 
 hpl/err q2 f2k3 err df2k3 [len] 22 0.2 s  
 key 3 1.9E-07 22 ''
 itx 3.5 1.7E-07 'x=(0.3,0.4)'  
 set pmci 5 
 hpl/err q2 f2k4 err df2k4 [len] 23 0.2 s  
 key 3 9E-08 23 ''
 itx 3.5 8E-08 'x=(0.4,0.5)'   
 set pmci 6 
 hpl/err q2 f2k5 err df2k5 [len] 24 0.2 s  
 key 3 5E-08 24 ''
 itx 3.5 4E-08 'x=(0.5,0.6)'    
 set pmci 7 
 hpl/err q2 f2k6 err df2k6 [len] 25 0.2 s   
 key 3 2.4E-08 25 ''
 itx 3.5 2.1E-08 'x=(0.5,0.6)'     
 
 set pmci 1
 hpl/err q2 f2k7 err df2k7 [len] 26 0.2 s    
 key 10 5E-08 26 ''
 itx 11.5 4E-08 'x=(0.6,0.7)'      
 set pmci 2
 hpl/err q2 f2k8 err df2k8 [len] 27 0.2 s     
 key 10 2.4E-08 27 ''
 itx 11.5 2.1E-08 'x=(0.7,0.8)'      
 
 atit 'Q2' 'F2K' '' 222 
 
 return
